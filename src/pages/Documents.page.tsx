import React, { useState, useEffect } from 'react';
import { Trash } from 'lucide-react';

// –¢–∏–ø—ã –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã

/**
 * –§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ (—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ).
 */
type DocumentFormat = 'pdf' | 'doc' | 'xls' | 'jpg' | 'png' | 'zip' | 'unknown';

/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞.
 *
 * @property {string} id - —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä
 * @property {string} title - –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
 * @property {DocumentFormat} format - —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞
 * @property {string} size - —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
 * @property {string} url - URL –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è/—Å–∫–∞—á–∏–≤–∞–Ω–∏—è
 */
interface DocumentItem {
  id: string;
  title: string;
  format: DocumentFormat;
  size: string;
  url: string;
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç DocumentsPage —Ä–µ–∞–ª–∏–∑—É–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞–≥—Ä—É–∑–∫–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏.
 *
 * –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
 * - –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
 * - –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
 * - –£–¥–∞–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
 * - –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ localStorage
 */
export const DocumentsPage = () => {
  // –°–æ—Å—Ç–æ—è–Ω–∏—è
  const [selectedDoc, setSelectedDoc] = useState<DocumentItem | null>(null);
  const [uploadedFiles, setUploadedFiles] = useState<DocumentItem[]>([]);
  const [errorMessage, setErrorMessage] = useState<string | null>(null);

  // –ò–∫–æ–Ω–∫–∏ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–æ–≤ —Ñ–∞–π–ª–æ–≤
  const formatIcons: Record<DocumentFormat, string> = {
    pdf: 'üìÑ',
    doc: 'üìù',
    xls: 'üìä',
    jpg: 'üñºÔ∏è',
    png: 'üñºÔ∏è',
    zip: 'üóÑÔ∏è',
    unknown: 'üìé',
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏–∑ localStorage –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    try {
      const savedDocs = JSON.parse(localStorage.getItem('documents') || '[]');
      setUploadedFiles(savedDocs);
    } catch (e) {
      console.error('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è localStorage', e);
      setErrorMessage('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã ‚Äî localStorage –ø–æ–≤—Ä–µ–∂–¥—ë–Ω –∏–ª–∏ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω.');
    }
  }, []);

  /**
   * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞ –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é.
   * @param filename –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
   * @returns –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏–ª–∏ 'unknown'
   */
  const getFormatFromFileName = (filename: string): DocumentFormat => {
    const ext = filename.split('.').pop()?.toLowerCase() || '';
    if (['pdf'].includes(ext)) return 'pdf';
    if (['doc', 'docx'].includes(ext)) return 'doc';
    if (['xls', 'xlsx'].includes(ext)) return 'xls';
    if (['jpg', 'jpeg'].includes(ext)) return 'jpg';
    if (['png'].includes(ext)) return 'png';
    if (['zip', 'rar', '7z'].includes(ext)) return 'zip';
    return 'unknown';
  };

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–∑–º–µ—Ä –∏ —Ç–∏–ø, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≤ –æ–±—ä–µ–∫—Ç DocumentItem –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç.
   */
  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (!e.target.files) return;

    const selectedFiles = Array.from(e.target.files);

    selectedFiles.forEach((file) => {
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ (–º–∞–∫—Å–∏–º—É–º 5 –ú–ë)
      if (file.size > 5 * 1024 * 1024) {
        setErrorMessage(`–§–∞–π–ª "${file.name}" –ø—Ä–µ–≤—ã—à–∞–µ—Ç 5 –ú–ë.`);
        return;
      }

      const reader = new FileReader();

      reader.onload = () => {
        try {
          const fileDataUrl = reader.result as string;

          const documentItem: DocumentItem = {
            id: `upload-${Math.random().toString(36).substring(2, 11)}`,
            title: file.name,
            format: getFormatFromFileName(file.name),
            size: `${(file.size / 1024).toFixed(1)} KB`,
            url: fileDataUrl,
          };

          saveDocumentToLocal(documentItem);
          setUploadedFiles((prev) => [...prev, documentItem]);
          setErrorMessage(null); // –°–±—Ä–æ—Å –æ—à–∏–±–æ–∫
        } catch (err) {
          console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞:', err);
          setErrorMessage('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å –º–µ—Å—Ç–æ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ.');
        }
      };

      reader.onerror = () => {
        setErrorMessage(`–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ "${file.name}".`);
      };

      reader.readAsDataURL(file);
    });
  };

  /**
   * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç –≤ localStorage.
   * @param doc –û–±—ä–µ–∫—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞
   */
  const saveDocumentToLocal = (doc: DocumentItem) => {
    try {
      const storedDocs = JSON.parse(localStorage.getItem('documents') || '[]');
      storedDocs.push(doc);
      localStorage.setItem('documents', JSON.stringify(storedDocs));
    } catch (e) {
      throw new Error('localStorage –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.');
    }
  };

  /**
   * –£–¥–∞–ª—è–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç –ø–æ –µ–≥–æ ID.
   * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ localStorage.
   * @param id –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞
   */
  const handleDeleteDocument = (id: string) => {
    const updatedFiles = uploadedFiles.filter((doc) => doc.id !== id);
    setUploadedFiles(updatedFiles);
    localStorage.setItem('documents', JSON.stringify(updatedFiles));

    if (selectedDoc?.id === id) {
      setSelectedDoc(null);
    }
  };

  return (
    <div className="p-4 max-w-4xl mx-auto">
      {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–∞—Ö */}
      {errorMessage && (
        <div className="mb-4 p-3 bg-red-100 text-red-700 rounded-md text-sm sm:text-base">
          {errorMessage}
        </div>
      )}

      {/* –ü–æ–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ */}
      <div className="mb-6">
        <label
          htmlFor="file-upload"
          className="block text-sm font-medium text-gray-700 mb-2"
        >
          –ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
        </label>
        <input
          id="file-upload"
          type="file"
          multiple
          onChange={handleFileChange}
          accept=".pdf,.doc,.docx,.xls,.xlsx,.jpg,.jpeg,.png,.zip"
          className="
            block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4
            file:rounded-md file:border-0 file:text-sm file:font-semibold
            file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100
          "
        />
      </div>

      {/* –°–ø–∏—Å–æ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ */}
      <div>
        {uploadedFiles.length === 0 ? (
          <p className="text-gray-500 text-sm italic">–ù–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤</p>
        ) : (
          <ul className="space-y-3">
            {uploadedFiles.map((doc) => (
              <li
                key={doc.id}
                className={`flex items-center justify-between px-4 py-3 cursor-pointer rounded-md transition-colors ${
                  selectedDoc?.id === doc.id ? 'bg-indigo-50' : 'hover:bg-indigo-50'
                }`}
                onClick={() => setSelectedDoc(doc)}
                role="option"
                aria-selected={selectedDoc?.id === doc.id}
              >
                <div className="flex items-center flex-1 min-w-0">
                  <span className="mr-3 text-xl">{formatIcons[doc.format]}</span>
                  <div className="flex-1 min-w-0">
                    <p className="truncate font-medium">{doc.title}</p>
                    <p className="text-xs text-gray-500">{doc.size}</p>
                  </div>
                </div>
                {/* –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ */}
                <button
                  onClick={(e) => {
                    e.stopPropagation();
                    handleDeleteDocument(doc.id);
                  }}
                  className="z-50"
                  aria-label={`–£–¥–∞–ª–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç ${doc.title}`}
                >
                  <Trash size={18} />
                </button>
              </li>
            ))}
          </ul>
        )}
      </div>
    </div>
  );
};